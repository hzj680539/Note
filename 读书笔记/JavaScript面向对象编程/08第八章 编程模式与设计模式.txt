模式：一些常见问题的解决方案。
编程模式 coding pattern
设计模式 design pattern
编程模式：
1、行为隔离：网页三元素 内容，外观，行为（HTML、CSS、JavaScript）
2、命名空间：只定义一个全局变量，将其他变量和方法定义为该变量的属性。
3、初始化分支：初始化时，为不同的浏览器制定不同的实现方法。
4、惰性初始：使用该方法时，为不同的浏览器制定不同的实现。
5、配置对象：函数传参时，使用对象代替多个参数。
6、私有属性和方法：public, private, protected
7、特权函数
8、私有函数的公有化：私有函数赋值给公有属性
9、即时函数
(function(){ // code goes here }());
适用于脚步加载时执行的一次性初始化任务
10、模块：帮助我们管理代码片段或者库，在需要的时候引入。
11、链式调用
12、JSON：JavaScript Object Notation
设计模式：
创建型模式：对象的创建与初始化
结构型模式：描述了如何组合对象以提供新的功能
行为型模式：描述了对象之间如何通信
单件模式（创建型）：创建一种类型或者一个类的唯一对象。
工厂模式（创建型）：有多个相似对象，根据具体情况调用不同的对象。
装饰器模式（结构型）
观察者模式（行为型）：也称 发布/订阅模式
通常包括两类对象：
一个或多个发布者对象：当有重要的事情发布时，会通知订阅者。
一个或多个订阅者对象：追随一个或多个发布者，监听他们的通知并作出反应。
应有如下属性和方法：
1、由回调函数组成的订阅者数组
2、添加和删除订阅者的方法
3、publish()方法，传递数据给订阅者
4、make()方法，将任意方法转变成发布者并为其添加以上方法。





